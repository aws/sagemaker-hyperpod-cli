---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: inferenceendpointconfigs.inference.sagemaker.aws.amazon.com
spec:
  group: inference.sagemaker.aws.amazon.com
  names:
    kind: InferenceEndpointConfig
    listKind: InferenceEndpointConfigList
    plural: inferenceendpointconfigs
    singular: inferenceendpointconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: InferenceEndpointConfig is the Schema for the inferenceendpointconfigs
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: InferenceEndpointConfigSpec defines the desired state of
              InferenceEndpointConfig.
            properties:
              InitialReplicaCount:
                description: |-
                  Number of desired pods. This is a pointer to distinguish between explicit
                  zero and not specified. Defaults to 1.
                format: int32
                type: integer
              endpointName:
                description: Name used for Sagemaker Endpoint
                maxLength: 63
                pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
                type: string
              instanceType:
                description: Instance Type to deploy the model on
                pattern: ^ml\..*
                type: string
              invocationEndpoint:
                default: invoke
                description: |-
                  The invocation endpoint of the model server. http://<host>:<port>/ would be pre-populated based on the other fields.
                  Please fill in the path after http://<host>:<port>/ specific to your model server.
                type: string
              modelName:
                description: Name of model that will be created on Sagemaker
                maxLength: 63
                pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
                type: string
              modelSourceConfig:
                properties:
                  fsxStorage:
                    properties:
                      dnsName:
                        description: FSX File System DNS Name
                        type: string
                      fileSystemId:
                        description: FSX File System ID
                        type: string
                      mountName:
                        description: FSX File System Mount Name
                        type: string
                    required:
                    - fileSystemId
                    type: object
                  modelLocation:
                    description: Sepcific location where the model data exists
                    type: string
                  modelSourceType:
                    enum:
                    - fsx
                    - s3
                    type: string
                  prefetchEnabled:
                    default: false
                    description: In case the model seems to fit within the instance's
                      memory (VRAM), this option can be used to pre-fetch the model
                      to RAM and then the inference server will load to the GPU/CPU
                      device thereafter.
                    type: boolean
                  s3Storage:
                    properties:
                      bucketName:
                        description: S3 bucket location
                        type: string
                      region:
                        description: S3 bucket region
                        type: string
                    required:
                    - bucketName
                    - region
                    type: object
                required:
                - modelSourceType
                type: object
              modelVersion:
                description: Version of the model used in creating sagemaker endpoint
                type: string
              replicas:
                default: 1
                description: The desired number of inference server replicas. Default
                  1.
                format: int32
                type: integer
              tags:
                description: Mentions the tags to be added to the Sagemaker Endpoint
                items:
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                  required:
                  - name
                  - value
                  type: object
                type: array
              tlsConfig:
                description: Configurations for TLS
                properties:
                  tlsCertificateOutputS3Uri:
                    pattern: ^s3://([^/]+)/?(.*)$
                    type: string
                type: object
              worker:
                description: Details of the worker
                properties:
                  environmentVariables:
                    description: |-
                      List of environment variables to set in the container.
                      Cannot be updated.
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: |-
                            Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in the container and
                            any service environment variables. If a variable cannot be resolved,
                            the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless of whether the variable
                            exists or not.
                            Defaults to "".
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            fieldRef:
                              description: |-
                                Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                              x-kubernetes-map-type: atomic
                            resourceFieldRef:
                              description: |-
                                Selects a resource of the container: only resources limits and requests
                                (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                              x-kubernetes-map-type: atomic
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  image:
                    description: The name of the inference server image to be used
                    type: string
                  modelInvocationPort:
                    description: Defines the port at which the model server will listen
                      to the invocation requests.
                    properties:
                      containerPort:
                        description: Port on which the model server will be listening
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                      name:
                        default: http
                        description: |-
                          This is name for the port within the deployed container where the model will listen.
                          This will be referred to by the Load Balancer Service.
                          This must be an IANA_SVC_NAME (for eg. http) and unique within the pod.
                        pattern: ^http$|^grpc$
                        type: string
                    required:
                    - containerPort
                    type: object
                  modelVolumeMount:
                    description: Defines the volume where model will be loaded
                    properties:
                      mountPath:
                        default: /opt/ml/model
                        description: This is the path within the container where the
                          model data will be available for the inference server to
                          load it to GPU,CPU or other device
                        type: string
                      name:
                        description: Name of the model volume mount
                        type: string
                    required:
                    - name
                    type: object
                  resources:
                    description: Defines the Resources in terms of CPU, GPU, Memory
                      needed for the model to be deployed
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                            request:
                              description: |-
                                Request is the name chosen for a request in the referenced claim.
                                If empty, everything from the claim is made available, otherwise
                                only the result of this request.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                required:
                - image
                - modelInvocationPort
                - modelVolumeMount
                - resources
                type: object
            required:
            - endpointName
            - instanceType
            - modelName
            - modelSourceConfig
            - worker
            type: object
          status:
            description: ModelDeploymentStatus defines the observed state of ModelDeployment
            properties:
              conditions:
                description: Detailed conditions representing the state of the deployment
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              endpoints:
                description: EndpointStatus contains the status of SageMaker endpoints
                properties:
                  sagemaker:
                    description: Status of the SageMaker endpoint
                    properties:
                      configArn:
                        description: The Amazon Resource Name (ARN) of the endpoint
                          configuration.
                        pattern: (arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:endpoint-config/.*|^$)
                        type: string
                      endpointArn:
                        description: The Amazon Resource Name (ARN) of the SageMaker
                          endpoint
                        pattern: (arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:endpoint/.*|^$)
                        type: string
                      modelArn:
                        description: The ARN of the model created in SageMaker.
                        pattern: (arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:model/.*|^$)
                        type: string
                      state:
                        description: The current state of the SageMaker endpoint
                        type: string
                    required:
                    - state
                    type: object
                type: object
              observedGeneration:
                description: Latest generation reconciled by controller
                format: int64
                type: integer
              replicas:
                description: The observed number of inference server replicas.
                format: int32
                type: integer
              selector:
                description: LabelSelector for the deployment.
                type: string
              state:
                description: Current phase of the model deployment
                enum:
                - DeploymentPending
                - DeploymentInProgress
                - DeploymentFailed
                - DeploymentComplete
                - DeletionPending
                - DeletionInProgress
                - DeletionFailed
                - DeletionComplete
                type: string
              tlsCertificate:
                description: CertificateStatus represents the status of TLS certificates
                properties:
                  certificateARN:
                    description: The Amazon Resource Name (ARN) of the ACM certificate
                    pattern: arn:aws[a-z\-]*:acm:[a-z0-9\-]*:[0-9]{12}:certificate/.*
                    type: string
                  certificateName:
                    description: The certificate name of cert manager
                    type: string
                  issuerName:
                    description: The issuer name of cert manager
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        labelSelectorPath: .status.selector
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.replicas
      status: {}
