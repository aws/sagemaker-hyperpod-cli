[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
dynamic = ["dependencies"]
name = "sagemaker-hyperpod"
version = "3.1.0"
description = "Amazon SageMaker HyperPod SDK and CLI"
readme = "README.md"
requires-python = ">=3.8"
authors = [{name = "Amazon Web Services"}]
license = {text = "Apache-2.0"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[project.scripts]
hyp = "sagemaker.hyperpod.cli.hyp_cli:cli"

[tool.black]
line-length = 88

[tool.isort]
known_first_party = ["hyperpod_cli"]

# required for compatibility with black:
profile = "black"

# To maintain consistency with other settings
line_length = 100

[tool.mypy]
# See https://mypy.readthedocs.io/en/latest/config_file.html for more mypy options.

# Enables the type-checker on the interior of functions without type annotations.
check_untyped_defs = true

# Displaying specific error codes makes it easier to silence specific errors
# See also https://mypy.readthedocs.io/en/latest/error_codes.html
show_error_codes = true

# Show source code snippets and location markers in error messages
pretty = true

# Suppresses errors about packages which do not implement type-hint sharing.
# See also https://mypy.readthedocs.io/en/latest/running_mypy.html#missing-imports.
ignore_missing_imports = true

# Force override for yaml package as the package installed name is pyyaml
# See https://github.com/python/mypy/issues/10632
[[tool.mypy.overrides]]
module = ["yaml","tabulate"]
ignore_missing_imports = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    "custom_launcher"
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"