# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"). You
# may not use this file except in compliance with the License. A copy of
# the License is located at
#
#     http://aws.amazon.com/apache2.0/
#
# or in the "license" file accompanying this file. This file is
# distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
# ANY KIND, either express or implied. See the License for the specific
# language governing permissions and limitations under the License.
AWSTemplateFormatVersion: '2010-09-09'
Description:  This template deploys a VPC, with three public and private subnets spread
  across three Availability Zones. It deploys an internet gateway, with a default
  route on the public subnets. It deploys a NAT gateway in each AZ,
  and default routes for them in the private subnets.

Parameters:
  EKSClusterRoleArn:
    Description: Role used for creating eks cluster
    Type: String

  SubnetId1:
    Description: Subnets to attach EKS cluster to
    Type: String

  SubnetId2:
    Description: Subnets to attach EKS cluster to
    Type: String

  SecurityGroupId:
    Description: Security group to attach EKS cluster to
    Type: AWS::EC2::SecurityGroup::Id

  ClusterName:
    Description: EKS Cluster Name
    Type: String
    Default: 'hyperpod-eks'

  KubernetesVersion:
    Description: Kubernetes version to use for EKS cluster
    Type: String
    Default: '1.29'

  NetworkType:
    Description: IP version to use for EKS cluster
    Type: String
    Default: "ipv4"
    AllowedValues:
      - ipv4
      - ipv6
    ConstraintDescription: "Must be either ipv4 or ipv6"

Resources:

  EKSCluster:
    Type: 'AWS::EKS::Cluster'
    Properties:
      Name: !Ref ClusterName
      Version: !Ref KubernetesVersion
      RoleArn: !Ref EKSClusterRoleArn
      AccessConfig:
        # For now, HyperPod requires config map to work
        AuthenticationMode: API_AND_CONFIG_MAP
      Logging:
        ClusterLogging:
          EnabledTypes:
            - Type: api
            - Type: audit
            - Type: authenticator
            - Type: controllerManager
            - Type: scheduler
      ResourcesVpcConfig:
        SubnetIds:
          - !Ref SubnetId1
          - !Ref SubnetId2
        SecurityGroupIds:
          - !Ref SecurityGroupId
      KubernetesNetworkConfig:
        IpFamily: !Ref NetworkType

  VpcCNIAddOn:
    Type: 'AWS::EKS::Addon'
    Properties:
      AddonName: vpc-cni
      ClusterName: !Ref EKSCluster
      ResolveConflicts: OVERWRITE

  KubeProxyAddOn:
    Type: 'AWS::EKS::Addon'
    Properties:
      AddonName: kube-proxy
      ClusterName: !Ref EKSCluster
      ResolveConflicts: OVERWRITE

  CoreDNSAddOn:
    Type: 'AWS::EKS::Addon'
    Properties:
      AddonName: coredns
      ClusterName: !Ref EKSCluster
      ResolveConflicts: OVERWRITE

  PodIdentityAddOn:
    Type: 'AWS::EKS::Addon'
    Properties:
      AddonName: eks-pod-identity-agent
      ClusterName: !Ref EKSCluster
      ResolveConflicts: OVERWRITE

Outputs:

  ClusterArn:
    Description: The ARN of the EKS cluster
    Value: !GetAtt EKSCluster.Arn

  ClusterName:
    Description: The name of the EKS cluster
    Value: !Ref EKSCluster