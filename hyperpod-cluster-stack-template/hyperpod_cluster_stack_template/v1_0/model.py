from pydantic import BaseModel, Field
from typing import Optional, Literal, List, Any, Union

class ClusterStackBase(BaseModel):
    stage: Optional[str] = Field("prod", description="Deployment stage (gamma, prod)")
    enable_hp_inference_feature: Optional[bool] = Field(False, description="Feature flag for enabling HP inference")
    custom_bucket_name: Optional[str] = Field(None, description="Custom S3 bucket name for templates")
    resource_name_prefix: Optional[str] = Field("hyperpod-cli-integ-test", description="Unique prefix for all resources (must be different for each deployment)")
    vpc_cidr: Optional[str] = Field("10.192.0.0/16", description="The IP range (CIDR notation) for the VPC")
    availability_zone_ids: Union[List[str], None] = Field(["use2-az1", "use2-az2", "use2-az3"], description="List of AZs to deploy subnets in")
    vpc_id: Optional[str] = Field(None, description="The ID of the VPC")
    nat_gateway_ids: Union[List[str], None] = Field(None, description="List of NAT Gateway IDs")
    security_group_id: Optional[str] = Field(None, description="The ID of the security group")
    kubernetes_version: Optional[str] = Field("1.31", description="The Kubernetes version")
    node_provisioning_mode: Optional[str] = Field("Continuous", description="The node provisioning mode")
    eks_cluster_name: Optional[str] = Field("eks", description="The name of the EKS cluster")
    eks_private_subnet_ids: Union[List[str], None] = Field(None, description="List of private subnet IDs")
    security_group_ids: Union[List[str], None] = Field(None, description="List of cluster security group IDs")
    private_route_table_ids: Union[List[str], None] = Field(None, description="List of private route table IDs")
    s3_bucket_name: Optional[str] = Field("s3-bucket", description="The name of the S3 bucket")
    github_raw_url: Optional[str] = Field("https://raw.githubusercontent.com/aws-samples/awsome-distributed-training/refs/heads/main/1.architectures/7.sagemaker-hyperpod-eks/LifecycleScripts/base-config/on_create.sh", description="The raw GitHub URL for the lifecycle script")
    helm_repo_url: Optional[str] = Field("https://github.com/aws/sagemaker-hyperpod-cli.git", description="The URL of the Helm repo")
    helm_repo_path: Optional[str] = Field("helm_chart/HyperPodHelmChart", description="The path to the HyperPod Helm chart")
    helm_operators: Optional[str] = Field("mlflow.enabled=true,trainingOperators.enabled=true,storage.enabled=true,cluster-role-and-bindings.enabled=true,namespaced-role-and-bindings.enable=true,nvidia-device-plugin.devicePlugin.enabled=true,neuron-device-plugin.devicePlugin.enabled=true,aws-efa-k8s-device-plugin.devicePlugin.enabled=true,mpi-operator.enabled=true,health-monitoring-agent.enabled=true,deep-health-check.enabled=true,job-auto-restart.enabled=true,hyperpod-patching.enabled=true", description="The configuration of HyperPod Helm chart")
    namespace: Optional[str] = Field("kube-system", description="The namespace to deploy the HyperPod Helm chart")
    helm_release: Optional[str] = Field("dependencies", description="The name of the Helm release")
    hyperpod_cluster_name: Optional[str] = Field("hyperpod-cluster-integ-test", description="Name of SageMaker HyperPod Cluster")
    node_recovery: Optional[str] = Field("Automatic", description="Instance recovery setting")
    sagemaker_iam_role_name: Optional[str] = Field("iam-role", description="The name of the IAM role")
    private_subnet_ids: Union[List[str], None] = Field(None, description="List of private subnet IDs")
    on_create_path: Optional[str] = Field("sagemaker-hyperpod-eks-bucket", description="The file name of lifecycle script")
    instance_group_settings: Union[List[Any], None] = Field([{"InstanceCount":1,"InstanceGroupName":"controller-group","InstanceType":"ml.t3.medium","TargetAvailabilityZoneId":"use2-az2","ThreadsPerCore":1,"InstanceStorageConfigs":[{"EbsVolumeConfig":{"VolumeSizeInGB":500}}]}], description="Array containing instance group configurations")
    rig_settings: Union[List[Any], None] = Field(None, description="Array containing restricted instance group configurations")
    rig_s3_bucket_name: Optional[str] = Field(None, description="The name of the S3 bucket for RIG resources")
    tags: Union[List[Any], None] = Field(None, description="Custom tags for managing the SageMaker HyperPod cluster")
    fsx_subnet_id: Optional[str] = Field("", description="The subnet id for FSx")
    fsx_availability_zone_id: Optional[str] = Field("use2-az2", description="The availability zone for FSx")
    per_unit_storage_throughput: Optional[int] = Field(250, description="Per unit storage throughput")
    data_compression_type: Optional[str] = Field("NONE", description="Data compression type")
    file_system_type_version: Optional[float] = Field(2.15, description="File system type version")
    storage_capacity: Optional[int] = Field(1200, description="Storage capacity in GiB")
    fsx_file_system_id: Optional[str] = Field("", description="Existing FSx file system ID")
    create_vpc_stack: Optional[bool] = Field(True, description="Boolean to Create VPC Stack")
    create_security_group_stack: Optional[bool] = Field(True, description="Boolean to Create Security Group Stack")
    create_eks_cluster_stack: Optional[bool] = Field(True, description="Boolean to Create EKS Cluster Stack")
    create_s3_bucket_stack: Optional[bool] = Field(True, description="Boolean to Create S3 Bucket Stack")
    create_s3_endpoint_stack: Optional[bool] = Field(True, description="Boolean to Create S3 Endpoint Stack")
    create_life_cycle_script_stack: Optional[bool] = Field(True, description="Boolean to Create Life Cycle Script Stack")
    create_sagemaker_iam_role_stack: Optional[bool] = Field(True, description="Boolean to Create SageMaker IAM Role Stack")
    create_helm_chart_stack: Optional[bool] = Field(True, description="Boolean to Create Helm Chart Stack")
    create_hyperpod_cluster_stack: Optional[bool] = Field(True, description="Boolean to Create HyperPod Cluster Stack")
    create_fsx_stack: Optional[bool] = Field(True, description="Boolean to Create FSx Stack")
