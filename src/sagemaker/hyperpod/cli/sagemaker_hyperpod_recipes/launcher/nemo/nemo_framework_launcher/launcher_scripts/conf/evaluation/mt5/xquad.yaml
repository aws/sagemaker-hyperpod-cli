run:
  name: eval_${.task_name}_${.model_train_name}
  time_limit: "04:00:00"
  dependency: "singleton"
  model_train_name: mt5_390m
  task_name: "xquad"
  fine_tuning_dir: ${base_results_dir}/${.model_train_name}/${.task_name}
  results_dir: ${base_results_dir}/${.model_train_name}/${.task_name}_eval

trainer:
  devices: ${divide_ceil:${evaluation.model.model_parallel_size}, ${.num_nodes}}
  num_nodes: ${divide_ceil:${evaluation.model.model_parallel_size}, 8}
  accelerator: gpu
  precision: bf16
  logger: False # logger provided by exp_manager
  enable_checkpointing: False
  use_distributed_sampler: False
  log_every_n_steps: 10

exp_manager:
  explicit_log_dir: ${evaluation.run.results_dir}/results
  exp_dir: null
  name: megatron_mt5_${evaluation.run.task_name}_eval
  create_checkpoint_callback: False

model:
  restore_from_path: ${evaluation.run.fine_tuning_dir}/results/checkpoints/megatron_mt5_xquad.nemo # Path to a finetuned mT5 .nemo file
  pretrained_checkpoint:
    checkpoint_dir: null # Path to a folder that contains a .ckpt file
    checkpoint_name: null # Name of the .ckpt file within the checkpoint_dir.
    hparams_file: null # Path to a .yaml file that contains the hyperparameters of the checkpoint.
  gradient_as_bucket_view: True # Allocate gradients in a contiguous bucket to save memory (less fragmentation and buffer memory)
  megatron_amp_O2: False # Enable O2 optimization for megatron amp
  tensor_model_parallel_size: 1
  pipeline_model_parallel_size: 1
  pipeline_model_parallel_split_rank: ${divide_floor:${.pipeline_model_parallel_size}, 2}
  model_parallel_size: ${multiply:${.tensor_model_parallel_size}, ${.pipeline_model_parallel_size}}
  data:
    validation_ds:
      src_file_name:
        - ${data_dir}/squad_data/xquad/xquad.en_src.txt
        - ${data_dir}/squad_data/xquad/xquad.es_src.txt
        - ${data_dir}/squad_data/xquad/xquad.de_src.txt
        - ${data_dir}/squad_data/xquad/xquad.hi_src.txt
        - ${data_dir}/squad_data/xquad/xquad.zh_src.txt
      tgt_file_name:
        - ${data_dir}/squad_data/xquad/xquad.en_tgt.txt
        - ${data_dir}/squad_data/xquad/xquad.es_tgt.txt
        - ${data_dir}/squad_data/xquad/xquad.de_tgt.txt
        - ${data_dir}/squad_data/xquad/xquad.hi_tgt.txt
        - ${data_dir}/squad_data/xquad/xquad.zh_tgt.txt
      names:
        - xquad_en
        - xquad_es
        - xquad_de
        - xquad_hi
        - xquad_zh
      global_batch_size: 64
      micro_batch_size: 64
      shuffle: False
      num_workers: 4
      pin_memory: True
      max_src_seq_length: 512
      max_tgt_seq_length: 128
      drop_last: False
      write_predictions_to_file: True
      output_file_path_prefix: ${evaluation.run.results_dir}/results/predictions # Prefix of the file to write predictions to.
      metric:
        name: "exact_string_match" # Name of the evaluation metric to use.
        average: null # Average the metric over the dataset. Options: ['macro', 'micro']. Works only for 'F1', 'accuracy' etc. Refer to torchmetrics for metrics where this is supported.
        num_classes: null
        class_labels: null
        labels_are_strings: False