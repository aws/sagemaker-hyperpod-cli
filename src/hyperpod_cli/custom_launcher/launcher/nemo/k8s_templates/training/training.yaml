{{ $config := .Values.trainingConfig }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: train-script-{{ $config.jobName }}
data:
  train-script.sh: |
    #!/bin/bash
    set -ex

    {{- if $config.git.repo_url }}
    mkdir -p $HOME/tmp
    GIT_CLONE_DIR=$HOME/tmp/$HOSTNAME
    [[ -d $GIT_CLONE_DIR ]] && rm -rf $GIT_CLONE_DIR
    git clone {{ $config.git.repo_url }} $GIT_CLONE_DIR
    GIT_CLONE_DIR=${GIT_CLONE_DIR}/
    cd $GIT_CLONE_DIR

    {{- if $config.git.branch }}
    git checkout {{ $config.git.branch }}
    {{- end }}

    {{- if $config.git.commit }}
    git fetch origin {{ $config.git.commit }}
    git reset --hard {{ $config.git.commit }}
    {{- end }}
    {{- else }}
    GIT_CLONE_DIR=""
    {{- end }}

    {{- range $config.pre_script }}
    {{ . }}
    {{- end }}

    {{- if gt (int $config.nodes) 1 }}
    {{- if eq $config.device "trainium" }}
    hostname=$(hostname)
    prefix="{{ $config.jobName }}-worker-"
    echo "prefix is $prefix"
    node_id=${hostname#"$prefix"}
    export DISTRIBUTED_ARGS="--nproc_per_node {{ $config.ntasksPerNode }} --nnodes {{ $config.nodes }} --node_rank $node_id --master_addr={{ $config.jobName }}-worker-0 --master_port 44000"
    {{- else }}
    export DISTRIBUTED_ARGS="--nproc_per_node {{ $config.ntasksPerNode }} --nnodes {{ $config.nodes }} --rdzv_backend=c10d --rdzv_endpoint={{ $config.jobName }}-worker-0"
    {{- end }}
    {{- else }}
    export DISTRIBUTED_ARGS="--nproc_per_node {{ $config.ntasksPerNode }}"
    {{- end }}

    echo "DISTRIBUTED_ARGS=$DISTRIBUTED_ARGS"
    torchrun $DISTRIBUTED_ARGS ${GIT_CLONE_DIR}{{ $config.scriptPath }} \
    {{- if $config.scriptArgs }}
    {{ $config.scriptArgs }}
    {{- end }}

    {{- range $config.post_script }}
    {{ . }}
    {{- end }}

    {{- if $config.git.repo_url }}
    cd $HOME
    rm -rf $GIT_CLONE_DIR
    {{- end }}
---
apiVersion: kubeflow.org/v1
kind: PyTorchJob
metadata:
  name: {{ $config.jobName }}
  namespace: {{ $config.namespace }}
  {{- if $config.annotations }}
  annotations:
    {{- range $key, $value := $config.annotations }}
    {{ $key | quote }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
  labels:
    app: {{ $config.jobName }}
    {{- if $config.customLabels }}
    {{- range $key, $value := $config.customLabels }}
    {{ $key | quote }}: {{ $value | quote }}
    {{- end}}
    {{- end }}
spec:
  pytorchReplicaSpecs:
    Worker:
      replicas: {{ $config.nodes }}
      template:
        {{- if $config.customLabels }}
        metadata:
          labels:
            {{- range $key, $value := $config.customLabels }}
            {{ $key | quote }}: {{ $value | quote }}
            {{- end }}
        {{- end }}
        spec:
          {{- if $config.priorityClassName }}
          priorityClassName: {{ $config.priorityClassName }}
          {{- end }}
          {{- if $config.serviceAccountName }}
          serviceAccountName: {{ $config.serviceAccountName }}
          {{- end }}
          containers:
          - name: pytorch
            image: {{ .Values.image.trainingImage }}
            env:
              {{- range $key, $value := $config.envVars }}
              - name: {{ $key }}
                value: {{ $value | quote }}
              {{- end}}
            command:
            - /etc/config/train-script.sh
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            securityContext:
              capabilities:
                add: [ "IPC_LOCK" ]
            {{- if or (eq $config.device "gpu") (eq $config.device "trainium") (gt (int $config.numEFADevices) 0 ) }}
            resources:
              requests:
                {{- if eq $config.device "gpu" }}
                nvidia.com/gpu: {{ $config.ntasksPerNode }}
                {{- end }}
                {{- if eq $config.device "trainium" }}
                aws.amazon.com/neurondevice: {{ $config.numNeuronDevices }}
                {{- end }}
                {{- if gt (int $config.numEFADevices) 0 }}
                vpc.amazonaws.com/efa: {{ $config.numEFADevices }}
                {{- end }}
              limits:
                {{- if eq $config.device "gpu" }}
                nvidia.com/gpu: {{ $config.ntasksPerNode }}
                {{- end }}
                {{- if eq $config.device "trainium" }}
                aws.amazon.com/neurondevice: {{ $config.numNeuronDevices }}
                {{- end }}
                {{- if gt (int $config.numEFADevices) 0 }}
                vpc.amazonaws.com/efa: {{ $config.numEFADevices }}
                {{- end }}
            {{- end }}
            volumeMounts:
            {{- if $config.persistentVolumeClaims }}
            {{- range $config.persistentVolumeClaims }}
            - mountPath: {{ .mountPath }}
              name: {{ .claimName }}-volume
            {{- end }}
            {{- end }}
            {{- if $config.volumes }}
            {{- range $config.volumes }}
            - mountPath: {{ .mountPath }}
              name: {{ .volumeName }}
            {{- end }}
            {{- end }}            
            {{- if not $config.customScript }}
            - mountPath: /config
              name: training-config
            {{- end }}
            - mountPath: /etc/config
              name: train-script
            - mountPath: /dev/shm
              name: shm
          restartPolicy: {{ $config.restartPolicy }}

          {{- if (or $config.labelSelector.required $config.labelSelector.preferred) }}
          affinity:
            nodeAffinity:
            {{- if $config.labelSelector.required }}
              {{- range $key, $values := $config.labelSelector.required }}
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                    - key: {{ $key | quote }}
                      operator: In
                      values:
                        {{- range $values }}
                        - {{ . | quote }}
                        {{- end}}
              {{- end }}
            {{- end }}

            {{- if $config.labelSelector.preferred }}
              {{- $index := 0 }}
              {{- range $key, $values := $config.labelSelector.preferred }}
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: {{ index $config.labelSelector.weights $index }}
                  preference:
                    matchExpressions:
                      - key: {{ $key | quote }}
                        operator: In
                        values:
                          {{- range $values }}
                          - {{ . | quote }}
                          {{- end }}
              {{- $index = add $index 1 }}
              {{- end }}
            {{- end }}
          {{- end }}

          volumes:
          {{- if $config.persistentVolumeClaims }}
          {{- range $config.persistentVolumeClaims }}
          - name: {{ .claimName }}-volume
            persistentVolumeClaim:
              claimName: {{ .claimName }}
          {{- end }}
          {{- end }}
          {{- if $config.volumes }}
          {{- range $config.volumes }}
          - name: {{ .volumeName }}
            hostPath:
              path: {{ .hostPath }}
          {{- end }}
          {{- end }}          
          {{- if not $config.customScript }}
          - configMap:
              name: training-config
            name: training-config
          {{- end }}
          - name: shm
            hostPath:
              path: /dev/shm
              type: Directory
          - name: train-script
            configMap:
              defaultMode: 420
              items:
              - key: train-script.sh
                mode: 365
                path: train-script.sh
              name: train-script-{{ $config.jobName }}
